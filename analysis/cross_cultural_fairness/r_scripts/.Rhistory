usa_data$dictator_stickers_shared<-as.numeric(usa_data$dictator_stickers_shared)
usa_data$child_gender[which(usa_data$child_gender==1)]<-"gender1"
usa_data$child_gender[which(usa_data$child_gender==2)]<-"gender2"
usa_data <- usa_data[which(usa_data$Subject!=146),]
# Descriptive
# Number of each gender
gender_1 <- length(usa_data$child_gender[which(usa_data$child_gender=="gender1")])
gender_1
gender_2 <- length(usa_data$child_gender[which(usa_data$child_gender=="gender2")])
gender_2
# Dictator mean and SD
dictator_mean = mean(usa_data$dictator_stickers_shared)
dictator_mean
dictator_sd = sd(usa_data$dictator_stickers_shared)
dictator_sd
# Distributive justice tasks: mean and SD
hurt_mean = mean(usa_data$empathy_hurt)
hurt_mean
hurt_sd = sd(usa_data$empathy_hurt)
hurt_sd
poor_mean = mean(usa_data$wealth_poor)
poor_mean
poor_sd = sd(usa_data$wealth_poor)
poor_sd
lazy_mean = mean(usa_data$merit_lazy)
lazy_mean
lazy_sd = sd(usa_data$merit_lazy)
lazy_sd
# Dictator game by age and gender
dictator_anova = aov(dictator_stickers_shared~age_years*child_gender,data =usa_data)
summary(dictator_anova)
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
# Created by http://www.sthda.com/english/wiki/ggplot2-line-plot-quick-start-guide-r-software-and-data-visualization
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
dictator_summary <- data_summary(usa_data, varname="dictator_stickers_shared",
groupnames=c("child_gender", "age_years"))
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
# Created by http://www.sthda.com/english/wiki/ggplot2-line-plot-quick-start-guide-r-software-and-data-visualization
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
dictator_summary <- data_summary(usa_data, varname="dictator_stickers_shared",
groupnames=c("child_gender", "age_years"))
head(dictator_summary)
ggplot(dictator_summary, aes(x=age_years, y=dictator_stickers_shared, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=dictator_stickers_shared-sd, ymax=dictator_stickers_shared+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Generosity (number stickers)") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
summary(hurt_anova)
empathy_hurt_summary <- data_summary(usa_data, varname="empathy_hurt",
groupnames=c("child_gender", "age_years"))
head(empathy_hurt_summary)
ggplot(empathy_hurt_summary, aes(x=age_years, y=empathy_hurt, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=empathy_hurt-sd, ymax=empathy_hurt+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Generosity") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (wealth) by age and gender
wealth_anova = aov(wealth_poor~age_years*child_gender,data =usa_data)
summary(wealth_anova)
wealth_poor_summary <- data_summary(usa_data, varname="wealth_poor",
groupnames=c("child_gender", "age_years"))
head(wealth_poor_summary)
ggplot(wealth_poor_summary, aes(x=age_years, y=wealth_poor, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=wealth_poor-sd, ymax=wealth_poor+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Generosity") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (merit) by age and gender
merit_anova = aov(merit_lazy~age_years*child_gender,data =usa_data)
summary(merit_anova)
# Prepare workspace
rm(list=ls())
library(ggplot2)
library(plyr)
usa_data <- read.csv('/Volumes/decetylab/lab_members/kozloff/analysis/cross_cultural_fairness/data/clean_data/usa_behavioral_task_data.csv')
usa_data <- usa_data[which(!is.na(usa_data$child_gender)),]
usa_data <- usa_data[which(usa_data$age_years<9),]
usa_data$age_years <- as.factor(usa_data$age_years)
usa_data$wealth_poor<-as.numeric(usa_data$wealth_poor)
usa_data$merit_lazy<-as.numeric(usa_data$merit_lazy)
usa_data$empathy_hurt<-as.numeric(usa_data$empathy_hurt)
usa_data$dictator_stickers_shared<-as.numeric(usa_data$dictator_stickers_shared)
usa_data$dictator_stickers_shared<-as.numeric(usa_data$dictator_stickers_shared)
usa_data$child_gender[which(usa_data$child_gender==1)]<-"gender1"
usa_data$child_gender[which(usa_data$child_gender==2)]<-"gender2"
usa_data <- usa_data[which(usa_data$Subject!=146),]
# Descriptive
# Number of each gender
gender_1 <- length(usa_data$child_gender[which(usa_data$child_gender=="gender1")])
gender_1
gender_2 <- length(usa_data$child_gender[which(usa_data$child_gender=="gender2")])
gender_2
# Dictator mean and SD
dictator_mean = mean(usa_data$dictator_stickers_shared)
dictator_mean
dictator_sd = sd(usa_data$dictator_stickers_shared)
dictator_sd
# Distributive justice tasks: mean and SD
hurt_mean = mean(usa_data$empathy_hurt)
hurt_mean
hurt_sd = sd(usa_data$empathy_hurt)
hurt_sd
poor_mean = mean(usa_data$wealth_poor)
poor_mean
poor_sd = sd(usa_data$wealth_poor)
poor_sd
lazy_mean = mean(usa_data$merit_lazy)
lazy_mean
lazy_sd = sd(usa_data$merit_lazy)
lazy_sd
# Dictator game by age and gender
dictator_anova = aov(dictator_stickers_shared~age_years*child_gender,data =usa_data)
summary(dictator_anova)
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
# Created by http://www.sthda.com/english/wiki/ggplot2-line-plot-quick-start-guide-r-software-and-data-visualization
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
dictator_summary <- data_summary(usa_data, varname="dictator_stickers_shared",
groupnames=c("child_gender", "age_years"))
head(dictator_summary)
ggplot(dictator_summary, aes(x=age_years, y=dictator_stickers_shared, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=dictator_stickers_shared-sd, ymax=dictator_stickers_shared+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers (number stickers)") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
ggplot(dictator_summary, aes(x=age_years, y=dictator_stickers_shared, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=dictator_stickers_shared-sd, ymax=dictator_stickers_shared+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
summary(hurt_anova)
empathy_hurt_summary <- data_summary(usa_data, varname="empathy_hurt",
groupnames=c("child_gender", "age_years"))
head(empathy_hurt_summary)
ggplot(empathy_hurt_summary, aes(x=age_years, y=empathy_hurt, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=empathy_hurt-sd, ymax=empathy_hurt+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
summary(hurt_anova)
# Dictator game by age and gender
dictator_anova = aov(dictator_stickers_shared~age_years*child_gender,data =usa_data)
summary(dictator_anova)
#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
# Created by http://www.sthda.com/english/wiki/ggplot2-line-plot-quick-start-guide-r-software-and-data-visualization
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
dictator_summary <- data_summary(usa_data, varname="dictator_stickers_shared",
groupnames=c("child_gender", "age_years"))
head(dictator_summary)
ggplot(dictator_summary, aes(x=age_years, y=dictator_stickers_shared, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=dictator_stickers_shared-sd, ymax=dictator_stickers_shared+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
summary(hurt_anova)
empathy_hurt_summary <- data_summary(usa_data, varname="empathy_hurt",
groupnames=c("child_gender", "age_years"))
head(empathy_hurt_summary)
ggplot(empathy_hurt_summary, aes(x=age_years, y=empathy_hurt, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=empathy_hurt-sd, ymax=empathy_hurt+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
summary(hurt_anova)
# Distributive justice (empathy) by age and gender
hurt_anova = aov(empathy_hurt~age_years*child_gender,data =usa_data)
summary(hurt_anova)
empathy_hurt_summary <- data_summary(usa_data, varname="empathy_hurt",
groupnames=c("child_gender", "age_years"))
head(empathy_hurt_summary)
ggplot(empathy_hurt_summary, aes(x=age_years, y=empathy_hurt, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=empathy_hurt-sd, ymax=empathy_hurt+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (wealth) by age and gender
wealth_anova = aov(wealth_poor~age_years*child_gender,data =usa_data)
# Distributive justice (wealth) by age and gender
wealth_anova = aov(wealth_poor~age_years*child_gender,data =usa_data)
summary(wealth_anova)
wealth_poor_summary <- data_summary(usa_data, varname="wealth_poor",
groupnames=c("child_gender", "age_years"))
head(wealth_poor_summary)
ggplot(wealth_poor_summary, aes(x=age_years, y=wealth_poor, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=wealth_poor-sd, ymax=wealth_poor+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (merit) by age and gender
merit_anova = aov(merit_lazy~age_years*child_gender,data =usa_data)
summary(merit_anova)
wealth_poor_summary <- data_summary(usa_data, varname="wealth_poor",
groupnames=c("child_gender", "age_years"))
head(wealth_poor_summary)
ggplot(wealth_poor_summary, aes(x=age_years, y=wealth_poor, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=wealth_poor-sd, ymax=wealth_poor+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (merit) by age and gender
merit_anova = aov(merit_lazy~age_years*child_gender,data =usa_data)
summary(merit_anova)
# Distributive justice (merit) by age and gender
merit_anova = aov(merit_lazy~age_years*child_gender,data =usa_data)
summary(merit_anova)
summary(hurt_anova)
wealth_poor_summary <- data_summary(usa_data, varname="wealth_poor",
groupnames=c("child_gender", "age_years"))
head(wealth_poor_summary)
# Distributive justice (wealth) by age and gender
wealth_anova = aov(wealth_poor~age_years*child_gender,data =usa_data)
summary(wealth_anova)
wealth_poor_summary <- data_summary(usa_data, varname="wealth_poor",
groupnames=c("child_gender", "age_years"))
head(wealth_poor_summary)
ggplot(wealth_poor_summary, aes(x=age_years, y=wealth_poor, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=wealth_poor-sd, ymax=wealth_poor+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Distributive justice (merit) by age and gender
merit_anova = aov(merit_lazy~age_years*child_gender,data =usa_data)
summary(merit_anova)
# Distributive justice (merit) by age and gender
merit_anova = aov(merit_lazy~age_years*child_gender,data =usa_data)
summary(merit_anova)
summary(wealth_anova)
summary(merit_anova)
merit_lazy_summary <- data_summary(usa_data, varname="merit_lazy",
groupnames=c("child_gender", "age_years"))
head(merit_lazy_summary)
ggplot(merit_lazy_summary, aes(x=age_years, y=merit_lazy, group=child_gender, color=child_gender)) +
# geom_errorbar(aes(ymin=merit_lazy-sd, ymax=merit_lazy+sd), width=.1) +
geom_line() + geom_point()+
scale_color_brewer(palette="Paired")+theme_minimal() +
xlab("Age (years)") + ylab("Number stickers") +
theme(axis.text.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(size=12),
legend.text = element_text(size=12))
# Correlations
# Correlations
usa_data$age_years<- as.numeric(usa_data$age_years)
# Install packages
install.packages("corrplot")
library(corrplot)
correlation_subset <- cbind(usa_data$age_years, usa_data$dictator_stickers_shared, usa_data$wealth_poor, usa_data$merit_lazy, usa_data$empathy_hurt)
Veiw(correlation_subset)
View(correlation_subset)
col_names <- c(age_years, dictator_stickers_shared, wealth_poor, merit_lazy, empathy_hurt)
col_names <- c("age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- usa_data[col_names]
corrplot()
corrplot(correlation_subset, method = circle)
corrplot(correlation_subset, method = "circle")
corrplot(correlation_subset, method = "circle")
correlation_subset <- usa_data[col_names]
corrplot(correlation_subset, method = "circle")
# Correlations
usa_data$age_years<- as.numeric(usa_data$age_years)
col_names <- c("age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- as.matrix(usa_data[col_names])
corrplot(correlation_subset, method = "circle")
View(usa_data)
# Correlations
usa_data$age_years<- as.numeric(usa_data$age_years)
col_names <- c("Subject", "age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- as.matrix(usa_data[col_names])
corrplot(correlation_subset, method = "circle")
M <- cor(correlation_subset)
View(M)
corrplot(M, method = "circle")
corrplot(M, p.mat = M$p, insig = "p-value")
res1 <- cor.mtest(correlation_subset, conf.level = .95)
res1 <- cor.mtest(correlation_subset, conf.level = .95)
res1 <- cor.mtest(correlation_subset, conf.level = .95)
View(res1)
corrplot(res1, p.mat = res1$p, insig = "p-value")
corrplot(res1, p.mat = res1$p)
res1 <- cor.mtest(mtcars, conf.level = .95)
res1
res2 <- cor.mtest(correlation_subset, conf.level = .95)
res2
M <- cor(mtcars)
## add p-values on no significant coefficient
corrplot(M, p.mat = res1$p, insig = "p-value")
res2 <- cor.mtest(correlation_subset, conf.level = .95)
M <- cor(correlation_subset)
corrplot(M, p.mat = res2$p, insig = "p-value")
corrplot(M, p.mat = res2$p, order = "hclust", insig = "pch", addrect = 3)
corrplot(M, p.mat = res2$p, order = "hclust", insig = "pch", addrect = 3)
corrplot(M, p.mat = res2$p, insig = "blank")
corrplot(M, p.mat = res2$p, insig = "blank", sig.level = -1)
corrplot(M, p.mat = res2$p, insig = "blank")
M
res2
res2
M
View(M)
View(res2)
View(res2$p)
res2 <- cor.mtest(correlation_subset, conf.level = .95)
M <- cor(correlation_subset)
M
# Pearson's correlations
usa_data$age_years<- as.numeric(usa_data$age_years)
col_names <- c("Subject", "age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- as.matrix(usa_data[col_names])
res2 <- cor.mtest(correlation_subset, conf.level = .95)
M <- cor(correlation_subset)
M
# Pearson's correlations
usa_data$age_years<- as.numeric(usa_data$age_years)
col_names <- c("age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- as.matrix(usa_data[col_names])
res2 <- cor.mtest(correlation_subset, conf.level = .95)
M <- cor(correlation_subset)
corrplot(M, p.mat = res2$p, insig = "blank")
M
cor.test(usa_data$age_years, usa_data$dictator_stickers_shared)
M
corrplot(M, p.mat = res2$p, insig = "blank")
res2
cor.test(usa_data$age_years, usa_data$dictator_stickers_shared)
cor.test(usa_data$age_years, usa_data$dictator_stickers_shared)
cor.test(usa_data$age_years, usa_data$wealth_poor)
cor.test(usa_data$age_years, usa_data$merit_lazy)
cor.test(usa_data$wealth_poor, usa_data$merit_lazy)
cor.test(usa_data$age_years, usa_data$wealth_poor)
cor.test(usa_data$age_years, usa_data$merit_lazy)
cor.test(usa_data$wealth_poor, usa_data$merit_lazy)
cor.test(usa_data$age_years, usa_data$wealth_poor)
cor.test(usa_data$age_years, usa_data$merit_lazy)
cor.test(usa_data$wealth_poor, usa_data$merit_lazy)
cor.test(usa_data$wealth_poor, usa_data$empathy_hurt)
cor.test(usa_data$age_years, usa_data$wealth_poor)
# Visualize correlations
col_names <- c("age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- as.matrix(usa_data[col_names])
res2 <- cor.mtest(correlation_subset, conf.level = .95)
M <- cor(correlation_subset)
corrplot(M, p.mat = res2$p, insig = "blank")
corrplot(M, p.mat = res2$p, tl.col="black", insig = "blank")
# Visualize correlations
col_names <- c("age_years", "dictator_stickers_shared", "wealth_poor", "merit_lazy", "empathy_hurt")
correlation_subset <- as.matrix(usa_data[col_names])
colnames(correlation_subset) <- c("Age", "Dictator", "Wealth", "Merit", "Empathy")
res2 <- cor.mtest(correlation_subset, conf.level = .95)
M <- cor(correlation_subset)
corrplot(M, p.mat = res2$p, tl.col="black", insig = "blank")
# Install packages
install.packages("corrplot")
install.packages("corrplot")
